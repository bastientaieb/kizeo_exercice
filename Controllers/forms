const database = require("./Database/db");
const appError = require("../utils/appError");

const formsId = 743222;
const getUrl = `https://www.kizeoforms.com/rest/v3/forms/${formsId}/data/unread/exercice_entretien/100`;
const postUrl = `https://www.kizeoforms.com/rest/v3/forms/${formsId}/data/unread/exercice_entretien/100`;
const urlGetDataId = `https://www.kizeoforms.com/rest/v3/forms/${formsId}/data/all`;

fetch(urlGetDataId, {
  method: "GET",
  headers: {
    Authorization: process.env.TOKEN_API,
  },
})
  .then((res) => res.json())
  .then((allData) => getFormsPDF(allData))
  .catch((err) => console.err("Can't get formsId ", err));

function getFormsPDF(allData, getPDFUrl) {
  const dataId = allData._id;
  const getPDFUrl = `https://www.kizeoforms.com/rest/v3/forms/${formsId}/data/${dataId}/pdf`;
}


exports.getForms = (req, res, next) => {
  database.query("SELECT * FROM forms", function (err, data, fields) {
    if (err) return next(new appError(err));
    res.status(200).json({
      status: "success",
      lenght: data?.length,
      data: data,
    });
  });
};

const newData_ids = { _id, _record_number, _form_id, _user_id };

exports.modifyForms = (req, res, next) => {
  if (!req.params.id) {
    return next(new appError("No modification found", 404));
  }
  database.query(
    "UPDATE forms SET  WHERE _id=? AND _record_number=? AND _form_id=? AND _user_id=?",
    [newData_ids],
    function (err, data, fields) {
      if (err) return next(new appError(err, 500));
      res.status(201).json({
        status: "success",
        message: "Forms modification succeed",
      });
    }
  );
};

exports.getOneFormsPDF = (req, res, next) => {
  if (!req.params.id) {
    return next(new appError("No forms found", 404));
  }
  database.query(
    "SELECT * FROM forms WHERE id = ?",
    [req.params.id],
    function (err, data, fields) {
      if (err) return next(new appError(err, 500));
      res.status(200).json({
        status: "success",
        length: data?.length,
        data: data,
      });
    }
  );
};
